{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadomar/stocks/frontend/src/components/stockGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport useDebounce from './../hooks/useDebounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockGraph = () => {\n  _s();\n  const [stock, setStock] = useState('LLY'); // Stock symbol\n  const debouncedStock = useDebounce(stock, 500);\n  const [startDate, setStartDate] = useState('1900-01-01'); // Default start date\n  const [endDate, setEndDate] = useState('2024-10-16'); // Default end date\n  const [profit, setProfit] = useState(null);\n  const [purchaseAmount, setPurchaseAmount] = useState(100); // Default purchase amount\n  const [stockData, setStockData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [earliestDate, setEarliestDate] = useState('');\n  const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n\n  const [formattedStockData, setFormattedStockData] = useState('');\n  const svgRef = useRef(); // Ref for the SVG element\n\n  useEffect(() => {\n    setFormattedStockData(JSON.stringify(stockData, null, 2)); // 2 spaces for pretty printing\n  }, [stockData]);\n  useEffect(() => {\n    calculateProfit();\n  }, [purchaseAmount]);\n  useEffect(() => {\n    fetchEarliestDate();\n  }, [debouncedStock]);\n  useEffect(() => {\n    if (debouncedStock && startDate && endDate) {\n      fetchStockData();\n    }\n  }, [debouncedStock, startDate, endDate]);\n  useEffect(() => {\n    if (stockData.length) {\n      drawGraph(); // Call function to draw the graph\n    }\n  }, [stockData]);\n  function formatDateString(dateString) {\n    const match = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n    return match ? match[1] : ''; // Return the matched date or null if no match\n  }\n  const fetchStockData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const url = `http://localhost:5000/api/stocks?stock=${debouncedStock}&startDate=${startDate}&endDate=${endDate}`;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Network response was not ok');\n      const result = await response.json();\n      // Combine dates and prices\n      const formattedStockData = result.map(item => ({\n        date: new Date(item.timestamp * 1000),\n        price: item.price\n      }));\n      setStockData(formattedStockData);\n      calculateProfit(formattedStockData); // Calculate profit based on new data\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const drawGraph = () => {\n    // Set dimensions and margins for the graph\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 40\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Clear any previous SVG\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Create an SVG element\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Set the scales\n    const x = d3.scaleTime().domain(d3.extent(stockData, d => d.date)).range([0, width]);\n    const y = d3.scaleLinear().domain([0, d3.max(stockData, d => d.price)]).range([height, 0]);\n\n    // Add the axes\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n    // .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n    svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(y));\n\n    // Draw the line\n    const line = d3.line().x(d => x(d.date)).y(d => y(d.price));\n    // console.log('stockData',stockData);\n    svg.append('path').datum(stockData).attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', line);\n    const trackerLine = svg.append('line').attr('stroke', 'green').attr('stroke-width', 1)\n    // .style('opacity',1)\n    .attr(\"x1\", x(stockData[Math.floor(stockData.length / 2)].date)).attr(\"x2\", x(stockData[Math.floor(stockData.length / 2)].date)).attr(\"y1\", 0).attr(\"y2\", height).style(\"opacity\", 1);\n    svg.on('mousemove', e => {\n      const [mouseX] = d3.pointer(e);\n      const dateAtMouse = x.invert(mouseX);\n      console.log('d3.pointer(e)', d3.pointer(e));\n      console.log('dateAtMouse', dateAtMouse);\n      // const \n    });\n  };\n  function formatAsCurrency(amount) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  }\n\n  // Function to calculate profit\n  const calculateProfit = () => {\n    if (stockData.length === 0) return;\n\n    // Assuming stockData[0].price is the initial price and stockData[stockData.length - 1].price is the final price\n    const initialPrice = stockData[0].price;\n    const shares = purchaseAmount / initialPrice;\n    const finalPrice = stockData[stockData.length - 1].price;\n    const profitAmount = (shares * finalPrice - shares * initialPrice).toFixed(2);\n    setProfit(formatAsCurrency(profitAmount));\n  };\n  const fetchEarliestDate = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/earliest-date?symbol=${debouncedStock}`);\n      const newEarliestDate = formatDateString(response.data.earliestDate);\n      setEarliestDate(newEarliestDate);\n      if (new Date(newEarliestDate) > new Date(startDate)) {\n        setStartDate(newEarliestDate);\n      }\n\n      // Update endDate if it's earlier than the new earliest date\n      if (new Date(endDate) < new Date(newEarliestDate)) {\n        setEndDate(today); // Reset endDate to today\n      }\n    } catch (error) {\n      console.error('Error fetching earliest date:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Investment Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), \"Earliest date:\", earliestDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), \"Start date:\", startDate, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"100%\",\n              children: \"Purchase Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Stock Symbol\",\n                  value: stock,\n                  onChange: e => setStock(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  max: today,\n                  min: earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : '',\n                  value: startDate,\n                  onChange: e => {\n                    const selectedDate = e.target.value;\n                    if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                      setStartDate(selectedDate);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  max: today,\n                  min: earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : '',\n                  value: endDate,\n                  onChange: e => {\n                    const selectedDate = e.target.value;\n                    if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                      setEndDate(selectedDate);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: purchaseAmount,\n                  onChange: e => setPurchaseAmount(e.target.value),\n                  placeholder: \"Purchase Amount in USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Profit: \", profit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: formattedStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n};\n_s(StockGraph, \"TGFjZmPIi1HklktsjrJTrEMtU3s=\", false, function () {\n  return [useDebounce];\n});\n_c = StockGraph;\nexport default StockGraph;\nvar _c;\n$RefreshReg$(_c, \"StockGraph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","axios","useDebounce","jsxDEV","_jsxDEV","StockGraph","_s","stock","setStock","debouncedStock","startDate","setStartDate","endDate","setEndDate","profit","setProfit","purchaseAmount","setPurchaseAmount","stockData","setStockData","loading","setLoading","error","setError","earliestDate","setEarliestDate","today","Date","toISOString","split","formattedStockData","setFormattedStockData","svgRef","JSON","stringify","calculateProfit","fetchEarliestDate","fetchStockData","length","drawGraph","formatDateString","dateString","match","url","response","fetch","ok","Error","result","json","map","item","date","timestamp","price","err","message","margin","top","right","bottom","left","width","height","select","current","selectAll","remove","svg","attr","append","x","scaleTime","domain","extent","d","range","y","scaleLinear","max","call","axisBottom","axisLeft","line","datum","trackerLine","Math","floor","style","on","e","mouseX","pointer","dateAtMouse","invert","console","log","formatAsCurrency","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","initialPrice","shares","finalPrice","profitAmount","toFixed","get","newEarliestDate","data","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","type","placeholder","value","onChange","target","min","selectedDate","ref","_c","$RefreshReg$"],"sources":["/Users/ahmadomar/stocks/frontend/src/components/stockGraph.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nimport useDebounce from './../hooks/useDebounce';\n\nconst StockGraph = () => {\n    const [stock, setStock] = useState('LLY'); // Stock symbol\n    const debouncedStock = useDebounce(stock, 500);\n    const [startDate, setStartDate] = useState('1900-01-01'); // Default start date\n    const [endDate, setEndDate] = useState('2024-10-16'); // Default end date\n    const [profit, setProfit] = useState(null);\n    const [purchaseAmount, setPurchaseAmount] = useState(100); // Default purchase amount\n    const [stockData, setStockData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [earliestDate, setEarliestDate] = useState('');\n    const today = new Date().toISOString().split('T')[0]; // Get today's date in YYYY-MM-DD format\n    \n    const [formattedStockData, setFormattedStockData] = useState('');\n\n    const svgRef = useRef(); // Ref for the SVG element\n\n\n    useEffect(() => {\n        setFormattedStockData(JSON.stringify(stockData, null, 2)); // 2 spaces for pretty printing\n    }, [stockData]);\n\n    useEffect(() => {\n        calculateProfit();\n    }, [purchaseAmount]);\n\n    useEffect(() => {\n        fetchEarliestDate();\n    }, [debouncedStock]);\n\n    useEffect(() => {\n        if (debouncedStock && startDate && endDate) {\n            fetchStockData();\n        }\n    }, [debouncedStock, startDate, endDate]);\n\n    useEffect(() => {\n        if (stockData.length) {\n            drawGraph(); // Call function to draw the graph\n        }\n    }, [stockData]);\n\n\n    function formatDateString(dateString){\n        const match = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n        return match ? match[1] : ''; // Return the matched date or null if no match\n    }\n\n    const fetchStockData = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const url = `http://localhost:5000/api/stocks?stock=${debouncedStock}&startDate=${startDate}&endDate=${endDate}`;\n            const response = await fetch(url);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const result = await response.json();\n            // Combine dates and prices\n            const formattedStockData = result.map((item) => ({\n                date: new Date(item.timestamp * 1000),\n                price: item.price\n            }));\n            setStockData(formattedStockData);\n            calculateProfit(formattedStockData); // Calculate profit based on new data\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const drawGraph = () => {\n        // Set dimensions and margins for the graph\n        const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n        const width = 800 - margin.left - margin.right;\n        const height = 400 - margin.top - margin.bottom;\n\n        // Clear any previous SVG\n        d3.select(svgRef.current).selectAll('*').remove();\n\n        // Create an SVG element\n        const svg = d3.select(svgRef.current)\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        // Set the scales\n        const x = d3.scaleTime()\n            .domain(d3.extent(stockData, d => d.date))\n            .range([0, width]);\n\n        const y = d3.scaleLinear()\n            .domain([0, d3.max(stockData, d => d.price)])\n            .range([height, 0]);\n\n        // Add the axes\n        svg.append('g')\n            .attr('class', 'x-axis')\n            .attr('transform', `translate(0,${height})`)\n            .call(d3.axisBottom(x));\n            // .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n        svg.append('g')\n            .attr('class', 'y-axis')\n            .call(d3.axisLeft(y));\n\n        // Draw the line\n        const line = d3.line()\n            .x(d => x(d.date))\n            .y(d => y(d.price));\n// console.log('stockData',stockData);\n        svg.append('path')\n            .datum(stockData)\n            .attr('fill', 'none')\n            .attr('stroke', 'steelblue')\n            .attr('stroke-width', 1.5)\n            .attr('d', line);\n\n        const trackerLine = svg.append('line')\n            .attr('stroke','green')\n            .attr('stroke-width',1)\n            // .style('opacity',1)\n            .attr(\"x1\", x(stockData[Math.floor(stockData.length/2)].date))\n            .attr(\"x2\", x(stockData[Math.floor(stockData.length/2)].date))\n            .attr(\"y1\", 0)\n            .attr(\"y2\", height)\n            .style(\"opacity\", 1);\n\n        svg.on('mousemove',(e)=>{\n            const [mouseX] = d3.pointer(e);\n            const dateAtMouse = x.invert(mouseX);\n            console.log('d3.pointer(e)',d3.pointer(e))\n            console.log('dateAtMouse',dateAtMouse);\n            // const \n        });\n\n    };\n\n    function formatAsCurrency(amount) {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(amount);\n    }\n\n\n    // Function to calculate profit\n    const calculateProfit = () => {\n        if (stockData.length === 0) return;\n\n        // Assuming stockData[0].price is the initial price and stockData[stockData.length - 1].price is the final price\n        const initialPrice = stockData[0].price;\n        const shares = (purchaseAmount/initialPrice);\n        const finalPrice = stockData[stockData.length - 1].price;\n        const profitAmount = ((shares*finalPrice) - (shares*initialPrice)).toFixed(2);\n        setProfit(formatAsCurrency(profitAmount));\n    };\n\n    const fetchEarliestDate = async () => {\n        try {\n            const response = await axios.get(`http://localhost:5000/api/earliest-date?symbol=${debouncedStock}`);\n            const newEarliestDate = formatDateString(response.data.earliestDate);\n            setEarliestDate(newEarliestDate);\n\n            if(new Date(newEarliestDate)>new Date(startDate)) {\n                setStartDate(newEarliestDate);\n            }\n\n            // Update endDate if it's earlier than the new earliest date\n            if (new Date(endDate) < new Date(newEarliestDate)) {\n                setEndDate(today); // Reset endDate to today\n            }\n        } catch (error) {\n            console.error('Error fetching earliest date:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Stock Investment Graph</h1>\n            Earliest date:{earliestDate}\n            <br/>\n            Start date:{startDate}\n            <form>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Stock:</th>\n                            <th>Start:</th>\n                            <th>End:</th>\n                            <th colSpan='100%'>Purchase Amount:</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Stock Symbol\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"date\"\n                                        max={today}\n                                        min={earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : ''}\n                                        value={startDate}\n                                        onChange={(e) => {\n                                            const selectedDate = e.target.value;\n                                            if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                                                setStartDate(selectedDate);\n                                            }\n                                        }}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"date\"\n                                        max={today}\n                                        min={earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : ''}\n                                        value={endDate}\n                                        onChange={(e) => {\n                                            const selectedDate = e.target.value;\n                                            if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                                                setEndDate(selectedDate);\n                                            }\n                                        }}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"number\"\n                                        value={purchaseAmount}\n                                        onChange={(e) => setPurchaseAmount(e.target.value)}\n                                        placeholder=\"Purchase Amount in USD\"\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                {/*<button type=\"submit\">Fetch Data</button>*/}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </form>\n            {loading && <p>Loading...</p>}\n            {error && <p>Error: {error}</p>}\n            <svg ref={svgRef}></svg> {/* SVG for D3 to draw on */}\n            <h2>Profit: {profit}</h2>\n            <pre>{formattedStockData}</pre>\n        </div>\n    );\n};\n\nexport default StockGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}