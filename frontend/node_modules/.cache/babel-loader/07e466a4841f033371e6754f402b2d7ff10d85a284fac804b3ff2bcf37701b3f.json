{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadomar/stocks/frontend/src/components/stockGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport useDebounce from './../hooks/useDebounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockGraph = () => {\n  _s();\n  const [stock, setStock] = useState('ANF');\n  const debouncedStock = useDebounce(stock, 500);\n  // const [startDate, setStartDate] = useState('2024-10-15'); // default start date\n  const [startDate, setStartDate] = useState('1900-01-01'); // default start date\n  const [endDate, setEndDate] = useState('2024-10-16'); // default end date\n  const [profit, setProfit] = useState(null);\n  const [purchaseAmount, setPurchaseAmount] = useState(100); // default purchase amount $100\n  const [stockData, setStockData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [earliestDate, setEarliestDate] = useState('');\n  const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n  const [formattedStockData, setFormattedStockData] = useState('');\n  const svgRef = useRef(); // rerender graph everytime svg is changed\n\n  useEffect(() => {\n    setFormattedStockData(JSON.stringify(stockData, null, 2)); // 2 spaces for pretty printing\n  }, [stockData]);\n  useEffect(() => {\n    fetchEarliestDate();\n  }, [debouncedStock]);\n  useEffect(() => {\n    if (debouncedStock && startDate && endDate) {\n      fetchStockData();\n    }\n  }, [debouncedStock, startDate, endDate, purchaseAmount]);\n  useEffect(() => {\n    if (stockData.length) {\n      drawGraph();\n    }\n  }, [stockData]);\n  function formatDateString(dateString) {\n    const match = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/); // YYYY-MM-DD\n    return match ? match[1] : '';\n  }\n  const fetchStockData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const url = `http://localhost:5000/api/stocks?stock=${debouncedStock}&startDate=${startDate}&endDate=${endDate}`;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Network response was not ok');\n      const result = await response.json();\n      let previousPrice = null; // used whenever price comes back as null\n      const formattedStockData = result.map(item => {\n        const date = new Date(item.timestamp * 1000);\n        const price = item.price !== null ? item.price : previousPrice; // most recent known price\n        previousPrice = price;\n        return {\n          date,\n          price\n        };\n      });\n      setStockData(formattedStockData);\n      calculateProfit(formattedStockData);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // returns data point closest to mouse\n  const findClosestDataPoint = (stockData, dateAtMouse) => {\n    // binary search to find this faster\n    var left = 0;\n    var right = stockData.length - 1;\n    while (left < right) {\n      var mid = Math.floor((right + left) / 2);\n      var midDate = stockData[mid].date;\n      if (midDate.getTime() == dateAtMouse.getTime()) break;\n      if (midDate < dateAtMouse) {\n        left = mid + 1;\n      } else {\n        right = mid - 1;\n      }\n    }\n    return stockData[mid];\n  };\n  const drawGraph = () => {\n    // dimensions for graph\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 40\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // remove old graph\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // create new graph\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    let closestData;\n    const handleMousemove = e => {\n      const [mouseX, mouseY] = d3.pointer(e);\n      const dateAtMouse = x.invert(mouseX);\n      const priceAtMouse = stockData.filter(item => item.date == dateAtMouse);\n      console.log('priceAtMouse', priceAtMouse);\n      closestData = findClosestDataPoint(stockData, dateAtMouse);\n      if (closestData) {\n        var _closestData, _closestData2, _closestData2$price;\n        trackerLine.attr('stroke', 'steelblue').attr('stroke-width', 1)\n        // .attr(\"x1\", x(closestData.date))\n        // .attr(\"x2\", x(closestData.date))\n        .attr(\"x1\", x(dateAtMouse)).attr(\"x2\", x(dateAtMouse)).attr(\"y1\", 0).attr(\"y2\", height).style(\"opacity\", 1);\n\n        // Update ball position to match the closest data point\n        ball.attr('cx', x(closestData.date)).attr('cy', y(priceAtMouse))\n        // .attr('cy', y(closestData.price))\n        .attr('visibility', 'visible'); // Show the ball when data is available\n        if (((_closestData = closestData) === null || _closestData === void 0 ? void 0 : _closestData.price) == undefined) console.log('closestData', closestData);\n\n        // Update tooltip\n        tooltip.html(`Date: ${d3.timeFormat(\"%Y-%m-%d\")(closestData.date)}<br>Price: $${(_closestData2 = closestData) === null || _closestData2 === void 0 ? void 0 : (_closestData2$price = _closestData2.price) === null || _closestData2$price === void 0 ? void 0 : _closestData2$price.toFixed(2)}`).style('pointer-events', 'none').style(\"opacity\", 1).style(\"left\", `${e.pageX + 10}px`).style(\"top\", `${e.pageY - 20}px`);\n      }\n    };\n    const x = d3.scaleTime().domain(d3.extent(stockData, d => d.date)).range([0, width]);\n    const y = d3.scaleLinear().domain([0, d3.max(stockData, d => d.price)]).range([height, 0]);\n\n    // Add the axes\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n    // .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n    svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(y));\n\n    // const brushed = () => {\n    // console.log('brushed')\n    // var extent = brush.extent();\n    // drawAxes(extent[0][0], extent[1][0], extent[0][1], extent[1][1]);\n    // }\n\n    function drawAxes(minDate, maxDate, minValue, maxValue) {\n      // x.domain([minDate, maxDate]);\n      // y.domain([minValue, maxValue]);   \n      // var daysRange = Math.ceil((maxDate - minDate)/24/60/60/1000);\n      // d3.select(\"g.x.axis\").transition().duration(1000).call(x);\n      // d3.select(\"g.y.axis\").transition().duration(1000).call(y);\n    }\n\n    // maps x and y access to date and price attributes\n    const line = d3.line().x(d => x(d.date)).y(d => y(d.price));\n    svg.append('path').attr('class', 'line').datum(stockData) // plugs in data\n    .attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', line).attr('clip-path', 'url(#clip)');\n\n    // svg.append('g')\n    //     .attr('clip-path','url(#clipPath)')\n    //     .append('path')\n    //     .datum('stockData')\n    //     .attr('class','line')\n    //     .attr('d',line);\n\n    const trackerLine = svg.append('line').attr('stroke', 'steelblue').attr('stroke-width', 1).attr('y1', 0).attr('y2', height).style(\"opacity\", 1);\n\n    // lil ball on the line to show where it intersects the tracker\n    const ball = svg.append('circle').attr('r', 3).attr('fill', 'steelblue').attr('stroke', 'steelblue');\n\n    // shows info about garph intersect\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"position\", \"absolute\").style(\"padding\", \"5px\").style(\"background\", \"rgba(0, 0, 0, 0.7)\").style(\"color\", \"white\").style(\"border-radius\", \"3px\");\n\n    // invisible rectangle for detecting mouseover event\n    svg.append('rect').attr('width', width).attr('height', height).style('z-index', 99).style('fill', 'none').style('pointer-events', 'all');\n    svg.append('defs').append('clipPath').attr('id', 'clip').append('rect').attr('width', width).attr('height', height);\n\n    // svg.append('path')\n    //     .datum(stockData)\n    //     .attr('class','line')\n    //     .attr('clip-path','url(#clip)')\n    //     .attr('d',line);\n\n    // set up zoom brush\n    var brush = d3.brush()\n    // .x(x).y(y)\n    .on('end', e => {\n      if (!e.selection) return;\n      console.log(e.selection);\n      var [[x0, y0], [x1, y1]] = e.selection;\n      var minDate = x.invert(x0);\n      var maxDate = x.invert(x1);\n      var minValue = y.invert(y0);\n      var maxValue = y.invert(y1);\n      x.domain([minDate, maxDate]);\n      y.domain([minValue, maxValue]);\n\n      // Transition and update axes\n      svg.select(\".x-axis\").transition().duration(1000).call(d3.axisBottom(x));\n      svg.select(\".y-axis\").transition().duration(1000).call(d3.axisLeft(y));\n\n      // Re-render any chart elements (like lines, bars, etc.)\n      svg.selectAll('.line') // Assuming you have a line with this class\n      .transition().duration(1000).attr('d', line); // Redraw line with updated scales\n    });\n    svg.append(\"g\").attr(\"class\", \"brush\").call(brush);\n    svg.on('mousemove', handleMousemove);\n    svg.on('mouseout', () => {\n      trackerLine.style('opacity', 0);\n      tooltip.style('opacity', 0);\n      ball.style('opacity', 0);\n    });\n    svg.on('click', function (e) {\n      var _closestData3, _closestData3$price;\n      console.log('closestData', closestData);\n      // console.log('trackerLine',trackerLine)\n      var frozenTrackerLine = svg.append('line').style('pointer-events', 'none').attr('stroke', 'purple').attr('stroke-width', 1).attr('x1', x(closestData.date)).attr('x2', x(closestData.date)).attr('y1', 0).attr('y2', height).style(\"opacity\", 1);\n\n      // lil ball on the line to show where it intersects the tracker\n      var frozenBall = svg.append('circle').style('pointer-events', 'none').attr('cx', x(closestData.date)).attr('cy', y(closestData.price)).attr('visibility', 'visible') // Show the ball when data is available\n      .attr('r', 3).attr('fill', 'purple').attr('stroke', 'purple');\n\n      // shows info about garph intersect\n      var frozenTooltip = d3.select(\"body\").append(\"div\").style('pointer-events', 'none').html(`Date: ${d3.timeFormat(\"%Y-%m-%d\")(closestData.date)}<br>Price: $${(_closestData3 = closestData) === null || _closestData3 === void 0 ? void 0 : (_closestData3$price = _closestData3.price) === null || _closestData3$price === void 0 ? void 0 : _closestData3$price.toFixed(2)}`).style(\"left\", `${e.pageX + 10}px`).style(\"top\", `${e.pageY - 20}px`).attr(\"class\", \"tooltip\").style(\"opacity\", 1)\n      // .style(\"left\", `${e.pageX + 10}px`)\n      // .style(\"top\", `${e.pageY - 20}px`)\n      .style(\"position\", \"absolute\").style(\"padding\", \"5px\").style(\"background\", \"pink\").style(\"color\", \"black\").style(\"border-radius\", \"3px\");\n\n      // const [mouseX, mouseY] = d3.pointer(e);\n\n      // const dateAtMouse = x.invert(mouseX);\n      // const closestData = findClosestDataPoint(stockData, dateAtMouse);\n\n      /* see if you can copy the old one instead of making a new one*/\n      // Create a frozen tooltip at the clicked position\n      // const frozenTooltip = svg.append('g')\n      //     .attr('class', 'frozen-tooltip');\n\n      // frozenTooltip.append('circle') // Optional circle background\n      //     .attr('x', mouseX) // Use mouseX for horizontal position\n      //     .attr('y', mouseY) // Use mouseY for vertical position\n      //     .attr('r', 4)\n      //     .attr('fill', 'blue');\n\n      // // Use the closest data point's date and price but set position based on mouseY\n      // frozenTooltip.append('text')\n      //     .attr('x', mouseX + 10) // Offset for visibility\n      //     .attr('y', mouseY - 10) // Offset for visibility\n      //     .style(\"background\", \"rgba(0, 0, 0, 0.7)\")\n\n      //     .text(closestData ? `Date: ${closestData.date.toLocaleDateString()}, Price: $${closestData.price.toFixed(2)}` : 'No Data')\n      //     .attr('fill', 'white');\n    });\n  };\n  function formatAsCurrency(amount) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  }\n\n  // Function to calculate profit\n  const calculateProfit = () => {\n    if (stockData.length === 0) return;\n\n    // Assuming stockData[0].price is the initial price and stockData[stockData.length - 1].price is the final price\n    const initialPrice = stockData[0].price;\n    const shares = purchaseAmount / initialPrice;\n    const finalPrice = stockData[stockData.length - 1].price;\n    const profitAmount = (shares * finalPrice - shares * initialPrice).toFixed(2);\n    setProfit(formatAsCurrency(profitAmount));\n  };\n  const fetchEarliestDate = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/earliest-date?symbol=${debouncedStock}`);\n      const newEarliestDate = formatDateString(response.data.earliestDate);\n      setEarliestDate(newEarliestDate);\n      if (new Date(newEarliestDate) > new Date(startDate)) {\n        setStartDate(newEarliestDate);\n      }\n\n      // Update endDate if it's earlier than the new earliest date\n      if (new Date(endDate) < new Date(newEarliestDate)) {\n        setEndDate(today); // Reset endDate to today\n      }\n    } catch (error) {\n      console.error('Error fetching earliest date:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Investment Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this), \"Earliest date:\", earliestDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }, this), \"Start date:\", startDate, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"100%\",\n              children: \"Purchase Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Stock Symbol\",\n                  value: stock,\n                  onChange: e => setStock(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  max: today,\n                  min: earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : '',\n                  value: startDate,\n                  onChange: e => {\n                    const selectedDate = e.target.value;\n                    if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                      setStartDate(selectedDate);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  max: today,\n                  min: earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : '',\n                  value: endDate,\n                  onChange: e => {\n                    const selectedDate = e.target.value;\n                    if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                      setEndDate(selectedDate);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: purchaseAmount,\n                  onChange: e => setPurchaseAmount(e.target.value),\n                  placeholder: \"Purchase Amount in USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Profit: \", profit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: formattedStockData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 9\n  }, this);\n};\n_s(StockGraph, \"d84ooLuMKZa8fV+F8oP8QdcgVkY=\", false, function () {\n  return [useDebounce];\n});\n_c = StockGraph;\nexport default StockGraph;\n\n// const zoom = d3.zoom()\n//     .scaleExtent([1,10])\n//     .extent([0,0],[width,height])\n//     .translateExtent([[0,0],[width,height]])\n//     .on('zoom',zoomed);\n\n// svg.append('defs').append('clipPath')\n//     .attr('id','clip')\n//     .append('rect')\n//     .attr('width',width)\n//     .attr('height',height);\n\n// svg.call(zoom);\n\n// function zoomed(e){\n//     const newXScale = e.transform.rescaleX(x);\n//     const newYScale = e.transform.rescaleY(y);\n\n//     svg.select('.line')\n//         .attr('d', d3.line()\n//                 .x(d => newXScale(d.date))\n//                 .y(d => newYScale(d.date))\n//         )\n\n//     svg.select('.x-axis').call(d3.axisBottom(newXScale))\n//     svg.select('.y-axis').call(d3.axisLeft(newYScale))\n// }\n\n// svg.on('wheel', (e)=>{\n//     e.preventDefault();\n//     const scaleFactor = e.deltaY > 0 ? 1.1 : .9;\n//     svg.transition().call(zoom.scaleBy, scaleFactor);\n// });import React, { useState, useEffect, useRef } from 'react';\nvar _c;\n$RefreshReg$(_c, \"StockGraph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","axios","useDebounce","jsxDEV","_jsxDEV","StockGraph","_s","stock","setStock","debouncedStock","startDate","setStartDate","endDate","setEndDate","profit","setProfit","purchaseAmount","setPurchaseAmount","stockData","setStockData","loading","setLoading","error","setError","earliestDate","setEarliestDate","today","Date","toISOString","split","formattedStockData","setFormattedStockData","svgRef","JSON","stringify","fetchEarliestDate","fetchStockData","length","drawGraph","formatDateString","dateString","match","url","response","fetch","ok","Error","result","json","previousPrice","map","item","date","timestamp","price","calculateProfit","err","message","findClosestDataPoint","dateAtMouse","left","right","mid","Math","floor","midDate","getTime","margin","top","bottom","width","height","select","current","selectAll","remove","svg","attr","append","closestData","handleMousemove","e","mouseX","mouseY","pointer","x","invert","priceAtMouse","filter","console","log","_closestData","_closestData2","_closestData2$price","trackerLine","style","ball","y","undefined","tooltip","html","timeFormat","toFixed","pageX","pageY","scaleTime","domain","extent","d","range","scaleLinear","max","call","axisBottom","axisLeft","drawAxes","minDate","maxDate","minValue","maxValue","line","datum","brush","on","selection","x0","y0","x1","y1","transition","duration","_closestData3","_closestData3$price","frozenTrackerLine","frozenBall","frozenTooltip","formatAsCurrency","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","initialPrice","shares","finalPrice","profitAmount","get","newEarliestDate","data","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","type","placeholder","value","onChange","target","min","selectedDate","ref","_c","$RefreshReg$"],"sources":["/Users/ahmadomar/stocks/frontend/src/components/stockGraph.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nimport useDebounce from './../hooks/useDebounce';\n\nconst StockGraph = () => {\n    const [stock, setStock] = useState('ANF'); \n    const debouncedStock = useDebounce(stock, 500);\n    // const [startDate, setStartDate] = useState('2024-10-15'); // default start date\n    const [startDate, setStartDate] = useState('1900-01-01'); // default start date\n    const [endDate, setEndDate] = useState('2024-10-16'); // default end date\n    const [profit, setProfit] = useState(null);\n    const [purchaseAmount, setPurchaseAmount] = useState(100); // default purchase amount $100\n    const [stockData, setStockData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [earliestDate, setEarliestDate] = useState('');\n    const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n    const [formattedStockData, setFormattedStockData] = useState('');\n\n    const svgRef = useRef(); // rerender graph everytime svg is changed\n\n    useEffect(() => {\n        setFormattedStockData(JSON.stringify(stockData, null, 2)); // 2 spaces for pretty printing\n    }, [stockData]);\n\n    useEffect(() => {\n        fetchEarliestDate();\n    }, [debouncedStock]);\n\n    useEffect(() => {\n        if (debouncedStock && startDate && endDate) {\n            fetchStockData();\n        }\n    }, [debouncedStock, startDate, endDate, purchaseAmount]);\n\n    useEffect(() => {\n        if (stockData.length) {\n            drawGraph();\n        }\n    }, [stockData]);\n\n    function formatDateString(dateString){\n        const match = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/); // YYYY-MM-DD\n        return match ? match[1] : '';\n    }\n\n    const fetchStockData = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const url = `http://localhost:5000/api/stocks?stock=${debouncedStock}&startDate=${startDate}&endDate=${endDate}`;\n            const response = await fetch(url);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const result = await response.json();\n\n            let previousPrice = null; // used whenever price comes back as null\n            const formattedStockData = result.map(item => {\n                const date = new Date(item.timestamp * 1000);\n                const price = item.price !== null ? item.price : previousPrice; // most recent known price\n                previousPrice = price;\n                return { date, price };\n            });\n            setStockData(formattedStockData);\n            calculateProfit(formattedStockData);\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // returns data point closest to mouse\n    const findClosestDataPoint = (stockData, dateAtMouse) => {\n        // binary search to find this faster\n        var left = 0;\n        var right = stockData.length-1;\n        while(left < right){\n            var mid = Math.floor((right+left)/2);\n            var midDate = stockData[mid].date;\n            if(midDate.getTime() == dateAtMouse.getTime()) break;\n            if(midDate < dateAtMouse){\n                left = mid+1;\n            }else{\n                right = mid-1;\n            }\n        }\n        return stockData[mid];\n    }\n\n\n    const drawGraph = () => {\n        // dimensions for graph\n        const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n        const width = 800 - margin.left - margin.right;\n        const height = 400 - margin.top - margin.bottom;\n\n        // remove old graph\n        d3.select(svgRef.current).selectAll('*').remove();\n\n        // create new graph\n        const svg = d3.select(svgRef.current)\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        let closestData;\n        const handleMousemove = (e) => {\n            const [mouseX, mouseY] = d3.pointer(e);\n            const dateAtMouse = x.invert(mouseX);\n            const priceAtMouse = stockData.filter((item)=>item.date == dateAtMouse)\n            console.log('priceAtMouse',priceAtMouse)\n            closestData = findClosestDataPoint(stockData,dateAtMouse);\n            if(closestData){\n                trackerLine\n                    .attr('stroke','steelblue')\n                    .attr('stroke-width',1)\n                    // .attr(\"x1\", x(closestData.date))\n                    // .attr(\"x2\", x(closestData.date))\n                    .attr(\"x1\", x(dateAtMouse))\n                    .attr(\"x2\", x(dateAtMouse))\n                    .attr(\"y1\", 0)\n                    .attr(\"y2\", height)\n                    .style(\"opacity\", 1);\n    \n                // Update ball position to match the closest data point\n                ball\n                    .attr('cx', x(closestData.date))\n                    .attr('cy', y(priceAtMouse))\n                    // .attr('cy', y(closestData.price))\n                    .attr('visibility', 'visible'); // Show the ball when data is available\n                if(closestData?.price == undefined) console.log('closestData',closestData)\n\n                // Update tooltip\n                tooltip\n                    .html(`Date: ${d3.timeFormat(\"%Y-%m-%d\")(closestData.date)}<br>Price: $${closestData?.price?.toFixed(2)}`)\n                    .style('pointer-events','none')\n                    .style(\"opacity\", 1)\n                    .style(\"left\", `${e.pageX + 10}px`)\n                    .style(\"top\", `${e.pageY - 20}px`);\n            }\n        };\n\n\n        const x = d3.scaleTime()\n            .domain(d3.extent(stockData, d => d.date))\n            .range([0, width]);\n\n        const y = d3.scaleLinear()\n            .domain([0, d3.max(stockData, d => d.price)])\n            .range([height, 0]);\n\n        // Add the axes\n        svg.append('g')\n            .attr('class', 'x-axis')\n            .attr('transform', `translate(0,${height})`)\n            .call(d3.axisBottom(x));\n            // .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n        svg.append('g')\n            .attr('class', 'y-axis')\n            .call(d3.axisLeft(y));\n\n        // const brushed = () => {\n            // console.log('brushed')\n            // var extent = brush.extent();\n            // drawAxes(extent[0][0], extent[1][0], extent[0][1], extent[1][1]);\n        // }\n\n        function drawAxes(minDate, maxDate, minValue, maxValue) {\n            // x.domain([minDate, maxDate]);\n            // y.domain([minValue, maxValue]);   \n            // var daysRange = Math.ceil((maxDate - minDate)/24/60/60/1000);\n            // d3.select(\"g.x.axis\").transition().duration(1000).call(x);\n            // d3.select(\"g.y.axis\").transition().duration(1000).call(y);\n        }\n\n        // maps x and y access to date and price attributes\n        const line = d3.line()\n            .x(d => x(d.date))\n            .y(d => y(d.price));\n\n        svg.append('path')\n            .attr('class','line')\n            .datum(stockData) // plugs in data\n            .attr('fill', 'none')\n            .attr('stroke', 'steelblue')\n            .attr('stroke-width', 1.5)\n            .attr('d', line)\n            .attr('clip-path','url(#clip)')\n\n\n        // svg.append('g')\n        //     .attr('clip-path','url(#clipPath)')\n        //     .append('path')\n        //     .datum('stockData')\n        //     .attr('class','line')\n        //     .attr('d',line);\n\n        const trackerLine = svg.append('line')\n            .attr('stroke','steelblue')\n            .attr('stroke-width',1)\n            .attr('y1', 0)\n            .attr('y2', height)\n            .style(\"opacity\", 1);\n\n        // lil ball on the line to show where it intersects the tracker\n        const ball = svg.append('circle')\n            .attr('r', 3)\n            .attr('fill', 'steelblue')\n            .attr('stroke', 'steelblue');\n\n        // shows info about garph intersect\n        const tooltip = d3.select(\"body\").append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"opacity\", 0)\n            .style(\"position\", \"absolute\")\n            .style(\"padding\", \"5px\")\n            .style(\"background\", \"rgba(0, 0, 0, 0.7)\")\n            .style(\"color\", \"white\")\n            .style(\"border-radius\", \"3px\");\n\n        // invisible rectangle for detecting mouseover event\n        svg.append('rect')\n            .attr('width', width)\n            .attr('height', height)\n            .style('z-index',99)\n            .style('fill', 'none')\n            .style('pointer-events', 'all');\n\n        svg.append('defs')\n            .append('clipPath')\n            .attr('id', 'clip')\n            .append('rect')\n            .attr('width', width)\n            .attr('height', height);\n\n        // svg.append('path')\n        //     .datum(stockData)\n        //     .attr('class','line')\n        //     .attr('clip-path','url(#clip)')\n        //     .attr('d',line);\n\n        // set up zoom brush\n        var brush = d3.brush()\n                    // .x(x).y(y)\n                    .on('end', (e)=>{\n                        if(!e.selection) return\n                        console.log(e.selection)\n                        var [[x0, y0], [x1, y1]] = e.selection;\n                        var minDate = x.invert(x0);\n                        var maxDate = x.invert(x1);\n                        var minValue = y.invert(y0);\n                        var maxValue = y.invert(y1);\n\n                        x.domain([minDate, maxDate]);\n                        y.domain([minValue, maxValue]);\n                 \n                        // Transition and update axes\n                        svg.select(\".x-axis\")\n                            .transition()\n                            .duration(1000)\n                            .call(d3.axisBottom(x));\n\n                        svg.select(\".y-axis\")\n                            .transition()\n                            .duration(1000)\n                            .call(d3.axisLeft(y));\n\n                        // Re-render any chart elements (like lines, bars, etc.)\n                        svg.selectAll('.line') // Assuming you have a line with this class\n                            .transition()\n                            .duration(1000)\n                            .attr('d', line); // Redraw line with updated scales\n                    });\n\n\n        svg.append(\"g\")\n            .attr(\"class\", \"brush\")\n            .call(brush);\n\n        svg.on('mousemove', handleMousemove)\n        svg.on('mouseout',()=>{\n            trackerLine.style('opacity',0);\n            tooltip.style('opacity',0);\n            ball.style('opacity',0);\n        })\n        svg.on('click', function(e) {\n            console.log('closestData',closestData);\n            // console.log('trackerLine',trackerLine)\n            var frozenTrackerLine = svg.append('line')\n                .style('pointer-events','none')\n                .attr('stroke','purple')\n                .attr('stroke-width',1)\n                .attr('x1', x(closestData.date))\n                .attr('x2', x(closestData.date))\n                .attr('y1', 0)\n                .attr('y2', height)\n                .style(\"opacity\", 1);\n            \n            // lil ball on the line to show where it intersects the tracker\n            var frozenBall = svg.append('circle')\n                .style('pointer-events','none')\n                .attr('cx', x(closestData.date))\n                .attr('cy', y(closestData.price))\n                .attr('visibility', 'visible') // Show the ball when data is available\n                .attr('r', 3)\n                .attr('fill', 'purple')\n                .attr('stroke', 'purple');\n\n            // shows info about garph intersect\n            var frozenTooltip = d3.select(\"body\").append(\"div\")\n                .style('pointer-events','none')\n                .html(`Date: ${d3.timeFormat(\"%Y-%m-%d\")(closestData.date)}<br>Price: $${closestData?.price?.toFixed(2)}`)\n                .style(\"left\", `${e.pageX + 10}px`)\n                .style(\"top\", `${e.pageY - 20}px`)\n                .attr(\"class\", \"tooltip\")\n                .style(\"opacity\", 1)\n                // .style(\"left\", `${e.pageX + 10}px`)\n                // .style(\"top\", `${e.pageY - 20}px`)\n                .style(\"position\", \"absolute\")\n                .style(\"padding\", \"5px\")\n                .style(\"background\", \"pink\")\n                .style(\"color\", \"black\")\n                .style(\"border-radius\", \"3px\");\n\n\n\n\n            // const [mouseX, mouseY] = d3.pointer(e);\n\n            // const dateAtMouse = x.invert(mouseX);\n            // const closestData = findClosestDataPoint(stockData, dateAtMouse);\n\n            /* see if you can copy the old one instead of making a new one*/\n            // Create a frozen tooltip at the clicked position\n            // const frozenTooltip = svg.append('g')\n            //     .attr('class', 'frozen-tooltip');\n\n            // frozenTooltip.append('circle') // Optional circle background\n            //     .attr('x', mouseX) // Use mouseX for horizontal position\n            //     .attr('y', mouseY) // Use mouseY for vertical position\n            //     .attr('r', 4)\n            //     .attr('fill', 'blue');\n\n            // // Use the closest data point's date and price but set position based on mouseY\n            // frozenTooltip.append('text')\n            //     .attr('x', mouseX + 10) // Offset for visibility\n            //     .attr('y', mouseY - 10) // Offset for visibility\n            //     .style(\"background\", \"rgba(0, 0, 0, 0.7)\")\n\n            //     .text(closestData ? `Date: ${closestData.date.toLocaleDateString()}, Price: $${closestData.price.toFixed(2)}` : 'No Data')\n            //     .attr('fill', 'white');\n        });\n    };\n\n    function formatAsCurrency(amount) {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(amount);\n    }\n\n    // Function to calculate profit\n    const calculateProfit = () => {\n        if (stockData.length === 0) return;\n\n        // Assuming stockData[0].price is the initial price and stockData[stockData.length - 1].price is the final price\n        const initialPrice = stockData[0].price;\n        const shares = (purchaseAmount/initialPrice);\n        const finalPrice = stockData[stockData.length - 1].price;\n        const profitAmount = ((shares*finalPrice) - (shares*initialPrice)).toFixed(2);\n        setProfit(formatAsCurrency(profitAmount));\n    };\n\n    const fetchEarliestDate = async () => {\n        try {\n            const response = await axios.get(`http://localhost:5000/api/earliest-date?symbol=${debouncedStock}`);\n            const newEarliestDate = formatDateString(response.data.earliestDate);\n            setEarliestDate(newEarliestDate);\n\n            if(new Date(newEarliestDate)>new Date(startDate)) {\n                setStartDate(newEarliestDate);\n            }\n\n            // Update endDate if it's earlier than the new earliest date\n            if (new Date(endDate) < new Date(newEarliestDate)) {\n                setEndDate(today); // Reset endDate to today\n            }\n        } catch (error) {\n            console.error('Error fetching earliest date:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Stock Investment Graph</h1>\n            Earliest date:{earliestDate}\n            <br/>\n            Start date:{startDate}\n            <form>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Stock:</th>\n                            <th>Start:</th>\n                            <th>End:</th>\n                            <th colSpan='100%'>Purchase Amount:</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Stock Symbol\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"date\"\n                                        max={today}\n                                        min={earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : ''}\n                                        value={startDate}\n                                        onChange={(e) => {\n                                            const selectedDate = e.target.value;\n                                            if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                                                setStartDate(selectedDate);\n                                            }\n                                        }}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"date\"\n                                        max={today}\n                                        min={earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : ''}\n                                        value={endDate}\n                                        onChange={(e) => {\n                                            const selectedDate = e.target.value;\n                                            if (new Date(selectedDate) >= new Date(earliestDate) && new Date(selectedDate) <= new Date(today)) {\n                                                setEndDate(selectedDate);\n                                            }\n                                        }}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"number\"\n                                        value={purchaseAmount}\n                                        onChange={(e) => setPurchaseAmount(e.target.value)}\n                                        placeholder=\"Purchase Amount in USD\"\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                {/*<button type=\"submit\">Fetch Data</button>*/}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </form>\n            <svg ref={svgRef}></svg> {/* SVG for D3 to draw on */}\n            <h2>Profit: {profit}</h2>\n            {loading && <p>Loading...</p>}\n            {error && <p>Error: {error}</p>}\n            <pre>{formattedStockData}</pre>\n        </div>\n    );\n};\n\nexport default StockGraph;\n\n// const zoom = d3.zoom()\n//     .scaleExtent([1,10])\n//     .extent([0,0],[width,height])\n//     .translateExtent([[0,0],[width,height]])\n//     .on('zoom',zoomed);\n\n// svg.append('defs').append('clipPath')\n//     .attr('id','clip')\n//     .append('rect')\n//     .attr('width',width)\n//     .attr('height',height);\n\n// svg.call(zoom);\n\n// function zoomed(e){\n//     const newXScale = e.transform.rescaleX(x);\n//     const newYScale = e.transform.rescaleY(y);\n\n//     svg.select('.line')\n//         .attr('d', d3.line()\n//                 .x(d => newXScale(d.date))\n//                 .y(d => newYScale(d.date))\n//         )\n\n//     svg.select('.x-axis').call(d3.axisBottom(newXScale))\n//     svg.select('.y-axis').call(d3.axisLeft(newYScale))\n// }\n\n// svg.on('wheel', (e)=>{\n//     e.preventDefault();\n//     const scaleFactor = e.deltaY > 0 ? 1.1 : .9;\n//     svg.transition().call(zoom.scaleBy, scaleFactor);\n// });import React, { useState, useEffect, useRef } from 'react';"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}