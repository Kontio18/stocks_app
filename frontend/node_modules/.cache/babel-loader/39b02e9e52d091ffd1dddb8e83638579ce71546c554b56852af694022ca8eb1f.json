{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadomar/stocks/frontend/src/components/stockGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport useDebounce from './../hooks/useDebounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockGraph = () => {\n  _s();\n  const [stock, setStock] = useState('LLY'); // this is actually the stock symbol not the name\n  const debouncedStock = useDebounce(stock, 500); // this gives the user a chance to finish writing\n  const [startDate, setStartDate] = useState('1900-01-01'); // Default start date\n  const [endDate, setEndDate] = useState('2024-10-16'); // Default start date\n  const [profit, setProfit] = useState(null);\n  const [purchaseAmount, setPurchaseAmount] = useState(1000); // Default purchase amount\n  const [stockData, setStockData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [earliestDate, setEarliestDate] = useState('');\n\n  // const [formattedStockData, setFormattedStockData] = useState('');\n\n  const svgRef = useRef(); // Ref for the SVG element\n\n  // useEffect(()=>{\n  //     setFormattedStockData(JSON.stringify(stockData, null, 2)); // 2 spaces for pretty printing\n  // }\n  // ,[stockData])\n\n  useEffect(() => {\n    fetchEarliestDate();\n  }, [debouncedStock]);\n  useEffect(() => {\n    if (debouncedStock && startDate && endDate) {\n      fetchStockData();\n    }\n  }, [debouncedStock, startDate, endDate]);\n  useEffect(() => {\n    if (stockData.length) {\n      drawGraph(); // Call function to draw the graph\n    }\n  }, [stockData]);\n  function formatDateString(dateString) {\n    console.log('dateString', dateString);\n    const match = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n    console.log('match', match);\n    return match ? match[1] : ''; // Return the matched date or null if no match\n  }\n  const fetchStockData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      var url = `http://localhost:5000/api/stocks?stock=${debouncedStock}&startDate=${startDate}&endDate=${endDate}`;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Network response was not ok');\n      const result = await response.json();\n      // Combine dates and prices\n      const formattedStockData = result.map(item => ({\n        date: new Date(item.timestamp * 1000),\n        price: item.price\n      }));\n      setStockData(formattedStockData);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const drawGraph = () => {\n    // Set dimensions and margins for the graph\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 40\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Clear any previous SVG\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Create an SVG element\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Set the scales\n    const x = d3.scaleTime().domain(d3.extent(stockData, d => d.date)).range([0, width]);\n    const y = d3.scaleLinear().domain([0, d3.max(stockData, d => d.price)]).range([height, 0]);\n\n    // Add the axes\n    svg.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n    // .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n    svg.append('g').attr('class', 'y-axis').call(d3.axisLeft(y));\n\n    // Draw the line\n    const line = d3.line().x(d => x(d.date)).y(d => y(d.price));\n    svg.append('path').datum(stockData).attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', line);\n  };\n\n  // Function to calculate profit\n  const calculateProfit = () => {\n    if (stockData.length === 0) return;\n\n    // Assuming stockData[0].price is the initial price and stockData[stockData.length - 1].price is the final price\n    const initialPrice = stockData[0].price;\n    const finalPrice = stockData[stockData.length - 1].price;\n    const profitAmount = finalPrice - initialPrice;\n    setProfit(profitAmount);\n  };\n  const fetchEarliestDate = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/earliest-date?symbol=${debouncedStock}`);\n      setEarliestDate(formatDateString(response.data.earliestDate));\n      var newStartDate = formatDateString(earliestDate);\n      if (new Date(earliestDate) > new Date(startDate)) {\n        setStartDate(newStartDate);\n      }\n    } catch (error) {\n      console.error('Error fetching earliest date:', error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // fetchStockData(); // Fetch data on form submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Investment Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), earliestDate, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"100%\",\n              children: \"Purchase Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Stock Symbol\",\n                  value: stock,\n                  onChange: e => setStock(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  min: earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : '',\n                  value: startDate,\n                  onChange: e => setStartDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: endDate,\n                  onChange: e => setEndDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: purchaseAmount,\n                  onChange: e => setPurchaseAmount(e.target.value),\n                  placeholder: \"Purchase Amount in USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Fetch Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(StockGraph, \"tL7c3Jz+P6GolFYamHskuxaBzT8=\", false, function () {\n  return [useDebounce];\n});\n_c = StockGraph;\nexport default StockGraph;\nvar _c;\n$RefreshReg$(_c, \"StockGraph\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","axios","useDebounce","jsxDEV","_jsxDEV","StockGraph","_s","stock","setStock","debouncedStock","startDate","setStartDate","endDate","setEndDate","profit","setProfit","purchaseAmount","setPurchaseAmount","stockData","setStockData","loading","setLoading","error","setError","earliestDate","setEarliestDate","svgRef","fetchEarliestDate","fetchStockData","length","drawGraph","formatDateString","dateString","console","log","match","url","response","fetch","ok","Error","result","json","formattedStockData","map","item","date","Date","timestamp","price","err","message","margin","top","right","bottom","left","width","height","select","current","selectAll","remove","svg","attr","append","x","scaleTime","domain","extent","d","range","y","scaleLinear","max","call","axisBottom","axisLeft","line","datum","calculateProfit","initialPrice","finalPrice","profitAmount","get","data","newStartDate","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","colSpan","type","placeholder","value","onChange","target","min","toISOString","split","ref","_c","$RefreshReg$"],"sources":["/Users/ahmadomar/stocks/frontend/src/components/stockGraph.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\n\nimport useDebounce from './../hooks/useDebounce';\n\nconst StockGraph = () => {\n    const [stock, setStock] = useState('LLY'); // this is actually the stock symbol not the name\n    const debouncedStock = useDebounce(stock, 500); // this gives the user a chance to finish writing\n    const [startDate, setStartDate] = useState('1900-01-01'); // Default start date\n    const [endDate, setEndDate] =  useState('2024-10-16'); // Default start date\n    const [profit, setProfit] = useState(null);\n    const [purchaseAmount, setPurchaseAmount] = useState(1000); // Default purchase amount\n    const [stockData, setStockData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [earliestDate, setEarliestDate] = useState('');\n\n    // const [formattedStockData, setFormattedStockData] = useState('');\n\n    const svgRef = useRef(); // Ref for the SVG element\n\n    // useEffect(()=>{\n    //     setFormattedStockData(JSON.stringify(stockData, null, 2)); // 2 spaces for pretty printing\n    // }\n    // ,[stockData])\n\n    useEffect(() => {\n        fetchEarliestDate();\n    }, [debouncedStock]);\n\n    useEffect(() => {\n        if (debouncedStock && startDate && endDate) {\n            fetchStockData();\n        }\n    }, [debouncedStock, startDate, endDate]);\n\n    useEffect(() => {\n        if (stockData.length) {\n            drawGraph(); // Call function to draw the graph\n        }\n    }, [stockData]);\n\n\n    function formatDateString(dateString){\n        console.log('dateString',dateString)\n        const match = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n        console.log('match',match)\n        return match ? match[1] : ''; // Return the matched date or null if no match\n    }\n\n\n    const fetchStockData = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            var url = `http://localhost:5000/api/stocks?stock=${debouncedStock}&startDate=${startDate}&endDate=${endDate}`;\n            const response = await fetch(url);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const result = await response.json();\n            // Combine dates and prices\n            const formattedStockData = result.map((item)=>({date:new Date(item.timestamp*1000), price:item.price}));\n            setStockData(formattedStockData);\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const drawGraph = () => {\n        // Set dimensions and margins for the graph\n        const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n        const width = 800 - margin.left - margin.right;\n        const height = 400 - margin.top - margin.bottom;\n\n        // Clear any previous SVG\n        d3.select(svgRef.current).selectAll('*').remove();\n\n        // Create an SVG element\n        const svg = d3.select(svgRef.current)\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        // Set the scales\n        const x = d3.scaleTime()\n            .domain(d3.extent(stockData, d => d.date))\n            .range([0, width]);\n\n        const y = d3.scaleLinear()\n            .domain([0, d3.max(stockData, d => d.price)])\n            .range([height, 0]);\n\n        // Add the axes\n        svg.append('g')\n            .attr('class', 'x-axis')\n            .attr('transform', `translate(0,${height})`)\n            .call(d3.axisBottom(x));\n            // .call(d3.axisBottom(x).tickFormat(d3.timeFormat(\"%Y-%m-%d\")));\n\n        svg.append('g')\n            .attr('class', 'y-axis')\n            .call(d3.axisLeft(y));\n\n        // Draw the line\n        const line = d3.line()\n            .x(d => x(d.date))\n            .y(d => y(d.price));\n\n        svg.append('path')\n            .datum(stockData)\n            .attr('fill', 'none')\n            .attr('stroke', 'steelblue')\n            .attr('stroke-width', 1.5)\n            .attr('d', line);\n    };\n\n    // Function to calculate profit\n    const calculateProfit = () => {\n        if (stockData.length === 0) return;\n\n        // Assuming stockData[0].price is the initial price and stockData[stockData.length - 1].price is the final price\n        const initialPrice = stockData[0].price;\n        const finalPrice = stockData[stockData.length - 1].price;\n        const profitAmount = finalPrice - initialPrice;\n\n        setProfit(profitAmount);\n    };\n\n    const fetchEarliestDate = async () => {\n        try {\n            const response = await axios.get(`http://localhost:5000/api/earliest-date?symbol=${debouncedStock}`);\n            setEarliestDate(formatDateString(response.data.earliestDate));\n            var newStartDate = formatDateString(earliestDate);\n            if(new Date(earliestDate)>new Date(startDate)) {\n                setStartDate(newStartDate);\n            }\n        } catch (error) {\n            console.error('Error fetching earliest date:', error);\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // fetchStockData(); // Fetch data on form submission\n    };\n\n    return (\n        <div>\n            <h1>Stock Investment Graph</h1>\n            {earliestDate}\n            <form onSubmit={handleSubmit}>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Stock:</th>\n                            <th>Start:</th>\n                            <th>End:</th>\n                            <th colSpan='100%'>Purchase Amount:</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Stock Symbol\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"date\"\n                                        min={earliestDate ? new Date(earliestDate).toISOString().split('T')[0] : ''}\n                                        value={startDate}\n                                        onChange={(e) => setStartDate(e.target.value)}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"date\"\n                                        value={endDate}\n                                        onChange={(e) => setEndDate(e.target.value)}\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <label>\n                                    <input\n                                        type=\"number\"\n                                        value={purchaseAmount}\n                                        onChange={(e) => setPurchaseAmount(e.target.value)}\n                                        placeholder=\"Purchase Amount in USD\"\n                                    />\n                                </label>\n                            </td>\n                            <td>\n                                <button type=\"submit\">Fetch Data</button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </form>\n            {loading && <p>Loading...</p>}\n            {error && <p>Error: {error}</p>}\n            <svg ref={svgRef}></svg> {/* SVG for D3 to draw on */}\n            <pre>{/*formattedStockData*/}</pre>\n        </div>\n    );\n};\n\nexport default StockGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}